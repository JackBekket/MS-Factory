{
  "contractName": "ERC721Full",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology. * See https://eips.ethereum.org/EIPS/eip-721\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"Full ERC721 Token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/ERC721Full.sol\":\"ERC721Full\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzz-raw://999ab32a6498d8ad8db61d47c3774aae2ff919acceebe2aeb50879bef62642c3\",\"dweb:/ipfs/QmephAYF5hoymu9qCFK6mURM2kZJCxU4ntUb4KTf1miVPT\"]},\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1c96acea0d31d4d720a7f8a4ca6cf59d298d6d2c8c86ea494c33b73e6449412f\",\"urls\":[\"bzz-raw://557fd90e4368bc64753f43be0647bcc14872b555cf335ff2a8654c302e051d50\",\"dweb:/ipfs/QmcLL3FhQSemyE4yun2YwjGEmHFSKyqieWZs4LSrgPi2FL\"]},\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x28f4e41b86db783cd8daf9fdec839ce5930332b60f6dc9ac4992dfb584997e79\",\"urls\":[\"bzz-raw://6f1b545ec9e1f0284e86ddd4ffff353e1ab5e026bbbfaa2a5d2d791c39d7afd7\",\"dweb:/ipfs/Qmf9rVfj6LreiE7NHkkT1S7eLbSQDDY1gKd9XWERx2AN7W\"]},\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x307231237999e19b618a03e7ecff1cee2a189dd019ebd203e5e43a63a7ac8aa3\",\"urls\":[\"bzz-raw://9a169446f024a24c3e5146cbeefea6be3bbbe9ba836f98f9d0c64af9f10773c4\",\"dweb:/ipfs/QmWibincTepM31suKeF6bd3shbPGjc9E7uULaXQBY1eNX5\"]},\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xe454aab4894511c610fb28e63e212608004921c10dfbffaf0b0e18a2c3b204eb\",\"urls\":[\"bzz-raw://cbb33c4aa1ba8470e389a79702b1b0450c03acd0e9471ed3ae5d566a958d36a4\",\"dweb:/ipfs/QmXryp8Ncftr8WYt7vWwoFQVKnbxtQ7dQBHzfzgWWYGisK\"]},\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzz-raw://0f314963ab26fb65c6f364d57900f0f1aa8f6aeb4396e327e5e5c646815f060e\",\"dweb:/ipfs/Qmf6eSUtRUF4YDxGyhQq7TVDYzuHcYEvk9Us3RVy5iZQVH\"]},\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzz-raw://e23af54444d2dbfae58895339eb7b189e1ba5d0b7abde63716e7ef7da23b2fde\",\"dweb:/ipfs/QmZva7dE1SMd1yyizzc6ivSoBXXwpNveLV7iFNATNpq68Y\"]},\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzz-raw://a8024c00e34efaf328f9592e76823c79f25fa0f6006bdf4a1e7fea204afd4773\",\"dweb:/ipfs/QmZns9jTr7843njq3J2iL2LLoWXK5mdzN1bDGd9GL3ahhD\"]},\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"/home/jack/ethProjects/MS-Factory/contracts/zeppeline/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a257806395d89b411161007157806395d89b4114610349578063a22cb46514610351578063b88d4fde1461037f578063c87b56dd14610445578063e985e9c5146104625761010b565b80634f6ccce7146102e15780636352211e146102fe5780636c0360eb1461031b57806370a08231146103235761010b565b806318160ddd116100de57806318160ddd1461022f57806323b872dd146102495780632f745c591461027f57806342842e0e146102ab5761010b565b806301ffc9a71461011057806306fdde031461014b578063081812fc146101c8578063095ea7b314610201575b600080fd5b6101376004803603602081101561012657600080fd5b50356001600160e01b031916610490565b604080519115158252519081900360200190f35b6101536104b3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018d578181015183820152602001610175565b50505050905090810190601f1680156101ba5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e5600480360360208110156101de57600080fd5b503561054a565b604080516001600160a01b039092168252519081900360200190f35b61022d6004803603604081101561021757600080fd5b506001600160a01b0381351690602001356105ac565b005b6102376106d4565b60408051918252519081900360200190f35b61022d6004803603606081101561025f57600080fd5b506001600160a01b038135811691602081013590911690604001356106da565b6102376004803603604081101561029557600080fd5b506001600160a01b038135169060200135610736565b61022d600480360360608110156102c157600080fd5b506001600160a01b038135811691602081013590911690604001356107b5565b610237600480360360208110156102f757600080fd5b50356107d0565b6101e56004803603602081101561031457600080fd5b5035610836565b610153610890565b6102376004803603602081101561033957600080fd5b50356001600160a01b03166108f1565b610153610959565b61022d6004803603604081101561036757600080fd5b506001600160a01b03813516906020013515156109ba565b61022d6004803603608081101561039557600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103d057600080fd5b8201836020820111156103e257600080fd5b8035906020019184600183028401116401000000008311171561040457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610abf945050505050565b6101536004803603602081101561045b57600080fd5b5035610b1d565b6101376004803603604081101561047857600080fd5b506001600160a01b0381358116916020013516610ce9565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b505050505090505b90565b600061055582610d17565b6105905760405162461bcd60e51b815260040180806020018281038252602c8152602001806115ef602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b60006105b782610836565b9050806001600160a01b0316836001600160a01b0316141561060a5760405162461bcd60e51b81526004018080602001828103825260218152602001806116736021913960400191505060405180910390fd5b806001600160a01b031661061c610d34565b6001600160a01b0316148061063d575061063d81610638610d34565b610ce9565b6106785760405162461bcd60e51b81526004018080602001828103825260388152602001806115646038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b6106eb6106e5610d34565b82610d38565b6107265760405162461bcd60e51b81526004018080602001828103825260318152602001806116946031913960400191505060405180910390fd5b610731838383610ddc565b505050565b6000610741836108f1565b821061077e5760405162461bcd60e51b815260040180806020018281038252602b8152602001806114b7602b913960400191505060405180910390fd5b6001600160a01b03831660009081526005602052604090208054839081106107a257fe5b9060005260206000200154905092915050565b61073183838360405180602001604052806000815250610abf565b60006107da6106d4565b82106108175760405162461bcd60e51b815260040180806020018281038252602c8152602001806116c5602c913960400191505060405180910390fd5b6007828154811061082457fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b03168061088a5760405162461bcd60e51b81526004018080602001828103825260298152602001806115c66029913960400191505060405180910390fd5b92915050565b600b8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b60006001600160a01b0382166109385760405162461bcd60e51b815260040180806020018281038252602a81526020018061159c602a913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061088a90610dfb565b600a8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b6109c2610d34565b6001600160a01b0316826001600160a01b03161415610a28576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000610a35610d34565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610a79610d34565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610ad0610aca610d34565b83610d38565b610b0b5760405162461bcd60e51b81526004018080602001828103825260318152602001806116946031913960400191505060405180910390fd5b610b1784848484610dff565b50505050565b6060610b2882610d17565b610b635760405162461bcd60e51b815260040180806020018281038252602f815260200180611644602f913960400191505060405180910390fd5b6000828152600c602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610bf85780601f10610bcd57610100808354040283529160200191610bf8565b820191906000526020600020905b815481529060010190602001808311610bdb57829003601f168201915b50505050509050805160001415610c1f5750506040805160208101909152600081526104ae565b600b816040516020018083805460018160011615610100020316600290048015610c805780601f10610c5e576101008083540402835291820191610c80565b820191906000526020600020905b815481529060010190602001808311610c6c575b5050825160208401908083835b60208310610cac5780518252601f199092019160209182019101610c8d565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506104ae565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b3390565b6000610d4382610d17565b610d7e5760405162461bcd60e51b815260040180806020018281038252602c815260200180611538602c913960400191505060405180910390fd5b6000610d8983610836565b9050806001600160a01b0316846001600160a01b03161480610dc45750836001600160a01b0316610db98461054a565b6001600160a01b0316145b80610dd45750610dd48185610ce9565b949350505050565b610de7838383610e51565b610df18382610f95565b610731828261108a565b5490565b610e0a848484610ddc565b610e16848484846110c8565b610b175760405162461bcd60e51b81526004018080602001828103825260328152602001806114e26032913960400191505060405180910390fd5b826001600160a01b0316610e6482610836565b6001600160a01b031614610ea95760405162461bcd60e51b815260040180806020018281038252602981526020018061161b6029913960400191505060405180910390fd5b6001600160a01b038216610eee5760405162461bcd60e51b81526004018080602001828103825260248152602001806115146024913960400191505060405180910390fd5b610ef781611303565b6001600160a01b0383166000908152600360205260409020610f1890611340565b6001600160a01b0382166000908152600360205260409020610f3990611357565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216600090815260056020526040812054610fbf90600163ffffffff61136016565b60008381526006602052604090205490915080821461105a576001600160a01b0384166000908152600560205260408120805484908110610ffc57fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061103a57fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b0384166000908152600560205260409020805490611083906000198301611479565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b60006110dc846001600160a01b03166113a9565b6110e857506001610dd4565b600060606001600160a01b038616630a85bd0160e11b611106610d34565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561117f578181015183820152602001611167565b50505050905090810190601f1680156111ac5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b602083106112145780518252601f1990920191602091820191016111f5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611276576040519150601f19603f3d011682016040523d82523d6000602084013e61127b565b606091505b5091509150816112cc578051156112955780518082602001fd5b60405162461bcd60e51b81526004018080602001828103825260328152602001806114e26032913960400191505060405180910390fd5b60008180602001905160208110156112e357600080fd5b50516001600160e01b031916630a85bd0160e11b149350610dd492505050565b6000818152600260205260409020546001600160a01b03161561133d57600081815260026020526040902080546001600160a01b03191690555b50565b805461135390600163ffffffff61136016565b9055565b80546001019055565b60006113a283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506113e2565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610dd4575050151592915050565b600081848411156114715760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561143657818101518382015260200161141e565b50505050905090810190601f1680156114635780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b8154818355818111156107315760008381526020902061073191810190830161054791905b808211156114b2576000815560010161149e565b509056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a7231582067c1c548a5f5048ccc070d66fa78730daf9c6eff5ec2e2ea6f6bb3fb7fa7379964736f6c63430005110032",
  "sourceMap": "386:227:83:-;;;456:155;8:9:-1;5:2;;;30:1;27;20:12;5:2;456:155:83;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;456:155:83;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;456:155:83;;420:4:-1;411:14;;;;456:155:83;;;;;411:14:-1;456:155:83;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;456:155:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;456:155:83;;420:4:-1;411:14;;;;456:155:83;;;;;411:14:-1;456:155:83;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;456:155:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;456:155:83;;-1:-1:-1;533:4:83;;-1:-1:-1;539:6:83;;-1:-1:-1;718:40:55;-1:-1:-1;;;;;;;;718:18:55;:40;:::i;:::-;2263::80;-1:-1:-1;;;;;;;;2263:18:80;:40;:::i;:::-;1357:51:82;-1:-1:-1;;;;;;;;1357:18:82;:51;:::i;:::-;912:12:85;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;934:16:85;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1038:49:85;-1:-1:-1;;;;;;;;1038:18:85;:49;:::i;:::-;840:254;;456:155:83;;386:227;;1442:190:55;-1:-1:-1;;;;;;1517:25:55;;;;;1509:66;;;;;-1:-1:-1;;;1509:66:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1585:33:55;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1585:40:55;1621:4;1585:40;;;1442:190::o;386:227:83:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;386:227:83;;;-1:-1:-1;386:227:83;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "386:227:83:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;386:227:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:55;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;915:133:55;-1:-1:-1;;;;;;915:133:55;;:::i;:::-;;;;;;;;;;;;;;;;;;1199:83:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1199:83:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4284:200:80;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4284:200:80;;:::i;:::-;;;;-1:-1:-1;;;;;4284:200:80;;;;;;;;;;;;;;3584:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3584:415:80;;;;;;;;:::i;:::-;;2171:94:82;;;:::i;:::-;;;;;;;;;;;;;;;;5930:287:80;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5930:287:80;;;;;;;;;;;;;;;;;:::i;1789:229:82:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1789:229:82;;;;;;;;:::i;6866:132:80:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6866:132:80;;;;;;;;;;;;;;;;;:::i;2603:196:82:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2603:196:82;;:::i;2940:223:80:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2940:223:80;;:::i;3387:89:85:-;;;:::i;2514:207:80:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2514:207:80;-1:-1:-1;;;;;2514:207:80;;:::i;1391:87:85:-;;;:::i;4777:249:80:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4777:249:80;;;;;;;;;;:::i;7721:269::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7721:269:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7721:269:80;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7721:269:80;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7721:269:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7721:269:80;;-1:-1:-1;7721:269:80;;-1:-1:-1;;;;;7721:269:80:i;1781:545:85:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1781:545:85;;:::i;5348:145:80:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5348:145:80;;;;;;;;;;:::i;915:133:55:-;-1:-1:-1;;;;;;1008:33:55;;985:4;1008:33;;;;;;;;;;;;;915:133;;;;:::o;1199:83:85:-;1270:5;1263:12;;;;;;;;-1:-1:-1;;1263:12:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1238:13;;1263:12;;1270:5;;1263:12;;1270:5;1263:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:83;;:::o;4284:200:80:-;4343:7;4370:16;4378:7;4370;:16::i;:::-;4362:73;;;;-1:-1:-1;;;4362:73:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4453:24:80;;;;:15;:24;;;;;;-1:-1:-1;;;;;4453:24:80;;4284:200::o;3584:415::-;3647:13;3663:16;3671:7;3663;:16::i;:::-;3647:32;;3703:5;-1:-1:-1;;;;;3697:11:80;:2;-1:-1:-1;;;;;3697:11:80;;;3689:57;;;;-1:-1:-1;;;3689:57:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3781:5;-1:-1:-1;;;;;3765:21:80;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3765:21:80;;:62;;;;3790:37;3807:5;3814:12;:10;:12::i;:::-;3790:16;:37::i;:::-;3757:152;;;;-1:-1:-1;;;3757:152:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3920:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3920:29:80;-1:-1:-1;;;;;3920:29:80;;;;;;;;;3964:28;;3920:24;;3964:28;;;;;;;3584:415;;;:::o;2171:94:82:-;2241:10;:17;2171:94;:::o;5930:287:80:-;6072:41;6091:12;:10;:12::i;:::-;6105:7;6072:18;:41::i;:::-;6064:103;;;;-1:-1:-1;;;6064:103:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6178:32;6192:4;6198:2;6202:7;6178:13;:32::i;:::-;5930:287;;;:::o;1789:229:82:-;1869:7;1904:16;1914:5;1904:9;:16::i;:::-;1896:5;:24;1888:80;;;;-1:-1:-1;;;1888:80:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1985:19:82;;;;;;:12;:19;;;;;:26;;2005:5;;1985:26;;;;;;;;;;;;;;1978:33;;1789:229;;;;:::o;6866:132:80:-;6952:39;6969:4;6975:2;6979:7;6952:39;;;;;;;;;;;;:16;:39::i;2603:196:82:-;2661:7;2696:13;:11;:13::i;:::-;2688:5;:21;2680:78;;;;-1:-1:-1;;;2680:78:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2775:10;2786:5;2775:17;;;;;;;;;;;;;;;;2768:24;;2603:196;;;:::o;2940:223:80:-;2995:7;3030:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3030:20:80;3068:19;3060:73;;;;-1:-1:-1;;;3060:73:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3151:5;2940:223;-1:-1:-1;;2940:223:80:o;3387:89:85:-;3461:8;3454:15;;;;;;;;-1:-1:-1;;3454:15:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:13;;3454:15;;3461:8;;3454:15;;3461:8;3454:15;;;;;;;;;;;;;;;;;;;;;;;;2514:207:80;2569:7;-1:-1:-1;;;;;2596:19:80;;2588:74;;;;-1:-1:-1;;;2588:74:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2680:24:80;;;;;;:17;:24;;;;;:34;;:32;:34::i;1391:87:85:-;1464:7;1457:14;;;;;;;;-1:-1:-1;;1457:14:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1432:13;;1457:14;;1464:7;;1457:14;;1464:7;1457:14;;;;;;;;;;;;;;;;;;;;;;;;4777:249:80;4862:12;:10;:12::i;:::-;-1:-1:-1;;;;;4856:18:80;:2;-1:-1:-1;;;;;4856:18:80;;;4848:56;;;;;-1:-1:-1;;;4848:56:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;4954:8;4915:18;:32;4934:12;:10;:12::i;:::-;-1:-1:-1;;;;;4915:32:80;;;;;;;;;;;;;;;;;-1:-1:-1;4915:32:80;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;4915:47:80;;;;;;;;;;;4992:12;:10;:12::i;:::-;4977:42;;;;;;;;;;-1:-1:-1;;;;;4977:42:80;;;;;;;;;;;;;;4777:249;;:::o;7721:269::-;7835:41;7854:12;:10;:12::i;:::-;7868:7;7835:18;:41::i;:::-;7827:103;;;;-1:-1:-1;;;7827:103:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7940:43;7958:4;7964:2;7968:7;7977:5;7940:17;:43::i;:::-;7721:269;;;;:::o;1781:545:85:-;1839:13;1872:16;1880:7;1872;:16::i;:::-;1864:76;;;;-1:-1:-1;;;1864:76:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1977:19;;;;:10;:19;;;;;;;;;1951:45;;;;;;-1:-1:-1;;1951:45:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;1977:19;1951:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:9;2104:23;2131:1;2104:28;2100:220;;;-1:-1:-1;;2148:9:85;;;;;;;;;-1:-1:-1;2148:9:85;;;;2100:220;2288:8;2298:9;2271:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2271:37:85;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2271:37:85;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2271:37:85;;;2257:52;;;;;5348:145:80;-1:-1:-1;;;;;5451:25:80;;;5428:4;5451:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5348:145::o;9159:152::-;9216:4;9248:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9248:20:80;9285:19;;;9159:152::o;788:96:20:-;867:10;788:96;:::o;9672:329:80:-;9757:4;9781:16;9789:7;9781;:16::i;:::-;9773:73;;;;-1:-1:-1;;;9773:73:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9856:13;9872:16;9880:7;9872;:16::i;:::-;9856:32;;9917:5;-1:-1:-1;;;;;9906:16:80;:7;-1:-1:-1;;;;;9906:16:80;;:51;;;;9950:7;-1:-1:-1;;;;;9926:31:80;:20;9938:7;9926:11;:20::i;:::-;-1:-1:-1;;;;;9926:31:80;;9906:51;:87;;;;9961:32;9978:5;9985:7;9961:16;:32::i;:::-;9898:96;9672:329;-1:-1:-1;;;;9672:329:80:o;3174:239:82:-;3259:38;3279:4;3285:2;3289:7;3259:19;:38::i;:::-;3308:47;3341:4;3347:7;3308:32;:47::i;:::-;3366:40;3394:2;3398:7;3366:27;:40::i;1065:112:48:-;1156:14;;1065:112::o;8695:269:80:-;8804:32;8818:4;8824:2;8828:7;8804:13;:32::i;:::-;8854:48;8877:4;8883:2;8887:7;8896:5;8854:22;:48::i;:::-;8846:111;;;;-1:-1:-1;;;8846:111:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13282:447;13395:4;-1:-1:-1;;;;;13375:24:80;:16;13383:7;13375;:16::i;:::-;-1:-1:-1;;;;;13375:24:80;;13367:78;;;;-1:-1:-1;;;13367:78:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13463:16:80;;13455:65;;;;-1:-1:-1;;;13455:65:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13531:23;13546:7;13531:14;:23::i;:::-;-1:-1:-1;;;;;13565:23:80;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;13610:21:80;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;13654:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;13654:25:80;-1:-1:-1;;;;;13654:25:80;;;;;;;;;13695:27;;13654:20;;13695:27;;;;;;;13282:447;;;:::o;6284:1128:82:-;-1:-1:-1;;;;;6571:18:82;;6546:22;6571:18;;;:12;:18;;;;;:25;:32;;6601:1;6571:32;:29;:32;:::i;:::-;6613:18;6634:26;;;:17;:26;;;;;;6546:57;;-1:-1:-1;6764:28:82;;;6760:323;;-1:-1:-1;;;;;6830:18:82;;6808:19;6830:18;;;:12;:18;;;;;:34;;6849:14;;6830:34;;;;;;;;;;;;;;6808:56;;6912:11;6879:12;:18;6892:4;-1:-1:-1;;;;;6879:18:82;-1:-1:-1;;;;;6879:18:82;;;;;;;;;;;;6898:10;6879:30;;;;;;;;;;;;;;;;;;;:44;;;;6995:30;;;:17;:30;;;;;:43;;;6760:323;-1:-1:-1;;;;;7169:18:82;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;7169:27:82;;;:::i;:::-;;6284:1128;;;;:::o;5128:183::-;-1:-1:-1;;;;;5241:16:82;;;;;;;:12;:16;;;;;;;;:23;;5212:26;;;:17;:26;;;;;:52;;;5274:16;;;39:1:-1;23:18;;45:23;;5274:30:82;;;;;;;;5128:183::o;14368:1051:80:-;14489:4;14514:15;:2;-1:-1:-1;;;;;14514:13:80;;:15::i;:::-;14509:58;;-1:-1:-1;14552:4:80;14545:11;;14509:58;14636:12;14650:23;-1:-1:-1;;;;;14677:7:80;;-1:-1:-1;;;14780:12:80;:10;:12::i;:::-;14806:4;14824:7;14845:5;14685:175;;;;;;-1:-1:-1;;;;;14685:175:80;-1:-1:-1;;;;;14685:175:80;;;;;;-1:-1:-1;;;;;14685:175:80;-1:-1:-1;;;;;14685:175:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14685:175:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14685:175:80;;;-1:-1:-1;;26:21;;;22:32;6:49;;14685:175:80;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;14685:175:80;;;179:29:-1;;;;160:49;;14677:184:80;;;14685:175;;14677:184;;-1:-1:-1;14677:184:80;;-1:-1:-1;25:18;-1:-1;14677:184:80;-1:-1:-1;14677:184:80;;-1:-1:-1;14677:184:80;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;14677:184:80;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14635:226:80;;;;14876:7;14871:542;;14903:17;;:21;14899:376;;15068:10;15062:17;15128:15;15115:10;15111:2;15107:19;15100:44;15017:145;15200:60;;-1:-1:-1;;;15200:60:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14871:542;15305:13;15332:10;15321:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15321:32:80;-1:-1:-1;;;;;;15375:26:80;-1:-1:-1;;;15375:26:80;;-1:-1:-1;15367:35:80;;-1:-1:-1;;;15367:35:80;15581:171;15680:1;15644:24;;;:15;:24;;;;;;-1:-1:-1;;;;;15644:24:80;:38;15640:106;;15733:1;15698:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;15698:37:80;;;15640:106;15581:171;:::o;1367:108:48:-;1447:14;;:21;;1466:1;1447:21;:18;:21;:::i;:::-;1430:38;;1367:108::o;1183:178::-;1335:19;;1353:1;1335:19;;;1183:178::o;1274:134:63:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:63:o;686:610:98:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:98;;;1238:51;-1:-1:-1;;686:610:98:o;1732:187:63:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:63;;;1732:187::o;386:227:83:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC721.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @title Full ERC721 Token\n * @dev This implementation includes all the required and some optional functionality of the ERC721 standard\n * Moreover, it includes approve all functionality using operator terminology.\n *\n * See https://eips.ethereum.org/EIPS/eip-721\n */\ncontract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {\n    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n}\n",
  "sourcePath": "/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/ERC721Full.sol",
  "ast": {
    "absolutePath": "/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        12901
      ]
    },
    "id": 12902,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12879,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:83"
      },
      {
        "absolutePath": "/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 12880,
        "nodeType": "ImportDirective",
        "scope": 12902,
        "sourceUnit": 12510,
        "src": "25:22:83",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 12881,
        "nodeType": "ImportDirective",
        "scope": 12902,
        "sourceUnit": 12878,
        "src": "48:32:83",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 12882,
        "nodeType": "ImportDirective",
        "scope": 12902,
        "sourceUnit": 13099,
        "src": "81:30:83",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12883,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12509,
              "src": "409:6:83",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$12509",
                "typeString": "contract ERC721"
              }
            },
            "id": 12884,
            "nodeType": "InheritanceSpecifier",
            "src": "409:6:83"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12885,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12877,
              "src": "417:16:83",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$12877",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 12886,
            "nodeType": "InheritanceSpecifier",
            "src": "417:16:83"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12887,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13098,
              "src": "435:14:83",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$13098",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 12888,
            "nodeType": "InheritanceSpecifier",
            "src": "435:14:83"
          }
        ],
        "contractDependencies": [
          4717,
          9217,
          9450,
          12509,
          12877,
          13098,
          13370,
          13397,
          13432
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\n@dev This implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology.\n * See https://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 12901,
        "linearizedBaseContracts": [
          12901,
          13098,
          13432,
          12877,
          13397,
          12509,
          13370,
          9217,
          9450,
          4717
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 12899,
              "nodeType": "Block",
              "src": "547:64:83",
              "statements": []
            },
            "documentation": null,
            "id": 12900,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12895,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12890,
                    "src": "533:4:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 12896,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12892,
                    "src": "539:6:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 12897,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12894,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13098,
                  "src": "518:14:83",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$13098_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "518:28:83"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12890,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 12900,
                  "src": "469:18:83",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12889,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:6:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12892,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 12900,
                  "src": "489:20:83",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12891,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:6:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "468:42:83"
            },
            "returnParameters": {
              "id": 12898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "547:0:83"
            },
            "scope": 12901,
            "src": "456:155:83",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 12902,
        "src": "386:227:83"
      }
    ],
    "src": "0:614:83"
  },
  "legacyAST": {
    "absolutePath": "/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        12901
      ]
    },
    "id": 12902,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12879,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:83"
      },
      {
        "absolutePath": "/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 12880,
        "nodeType": "ImportDirective",
        "scope": 12902,
        "sourceUnit": 12510,
        "src": "25:22:83",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 12881,
        "nodeType": "ImportDirective",
        "scope": 12902,
        "sourceUnit": 12878,
        "src": "48:32:83",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jack/ethProjects/MS-Factory/contracts/zeppeline/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 12882,
        "nodeType": "ImportDirective",
        "scope": 12902,
        "sourceUnit": 13099,
        "src": "81:30:83",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12883,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12509,
              "src": "409:6:83",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$12509",
                "typeString": "contract ERC721"
              }
            },
            "id": 12884,
            "nodeType": "InheritanceSpecifier",
            "src": "409:6:83"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12885,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12877,
              "src": "417:16:83",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$12877",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 12886,
            "nodeType": "InheritanceSpecifier",
            "src": "417:16:83"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12887,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13098,
              "src": "435:14:83",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$13098",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 12888,
            "nodeType": "InheritanceSpecifier",
            "src": "435:14:83"
          }
        ],
        "contractDependencies": [
          4717,
          9217,
          9450,
          12509,
          12877,
          13098,
          13370,
          13397,
          13432
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\n@dev This implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology.\n * See https://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 12901,
        "linearizedBaseContracts": [
          12901,
          13098,
          13432,
          12877,
          13397,
          12509,
          13370,
          9217,
          9450,
          4717
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 12899,
              "nodeType": "Block",
              "src": "547:64:83",
              "statements": []
            },
            "documentation": null,
            "id": 12900,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 12895,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12890,
                    "src": "533:4:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 12896,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12892,
                    "src": "539:6:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 12897,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12894,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13098,
                  "src": "518:14:83",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$13098_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "518:28:83"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12890,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 12900,
                  "src": "469:18:83",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12889,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:6:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12892,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 12900,
                  "src": "489:20:83",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12891,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:6:83",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "468:42:83"
            },
            "returnParameters": {
              "id": 12898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "547:0:83"
            },
            "scope": 12901,
            "src": "456:155:83",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 12902,
        "src": "386:227:83"
      }
    ],
    "src": "0:614:83"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2020-06-05T18:20:50.634Z",
  "devdoc": {
    "details": "This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology. * See https://eips.ethereum.org/EIPS/eip-721",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Full ERC721 Token"
  },
  "userdoc": {
    "methods": {}
  }
}